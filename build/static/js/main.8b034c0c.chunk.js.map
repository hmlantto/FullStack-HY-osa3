{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/Contact.js","components/Contacts.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterBy","handleFiltering","value","onChange","ContactForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Contact","contact","removeContact","name","number","onClick","Contacts","contacts","map","id","baseUrl","contactsService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","Notification","message","className","App","useState","setContacts","setNewName","setNewNumber","setFilterBy","notification","setNotification","notificationClass","setNotificationClass","useEffect","initialContacts","contactsToShow","filter","toLowerCase","includes","event","target","preventDefault","window","confirm","oldContact","find","x","changedContact","newContact","setTimeout","catch","error","contactObject","concat","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b034c0c.chunk.js","sourcesContent":["import React   from 'react'\r\n\r\nconst Filter = ( {filterBy, handleFiltering} ) => {\r\n    return (\r\n      <div>\r\n        Filter contacts: <input value={filterBy}\r\n                                onChange={handleFiltering} />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React   from 'react'\r\n\r\nconst ContactForm = ( props ) => {\r\n    return (\r\n      <form onSubmit={props.addContact}>\r\n        <div>\r\n          name: <input value={props.newName}\r\n                       onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber}\r\n                         onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default ContactForm","import React   from 'react'\r\n\r\nconst Contact = ( {contact, removeContact} ) => {\r\n    return (\r\n      <p>\r\n        {contact.name} {contact.number} <button type=\"button\" value={contact} onClick={removeContact}>delete</button>\r\n      </p>\r\n    )\r\n  }\r\n\r\nexport default Contact","import React   from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Contacts = ( {contacts, removeContact} ) => {\r\n    return (\r\n      <div>\r\n        {contacts.map(contact =>\r\n            <Contact key={contact.id} \r\n                     contact={contact} \r\n                     removeContact={() => removeContact(contact)} />\r\n          )}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Contacts","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst contactsService = { getAll, create, update, remove }\r\n\r\nexport default contactsService","import React   from 'react'\r\n\r\nconst Notification = ( {message, className} ) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Filter      from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport Contacts    from './components/Contacts'\nimport contactsService from './services/contacts'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ contacts, setContacts] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterBy, setFilterBy ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationClass, setNotificationClass ] = useState('')\n\n  useEffect(() => {\n    contactsService\n      .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n      })\n  }, [])\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const names = contacts.map( (contact) => contact.name.toLowerCase() )\n\n    if (names.includes( newName.toLowerCase() )) {\n      if( window.confirm( `${newName} is already in phonebook. Replace the old number with a new one?` ) ) {\n        const oldContact = contacts.find( x => x.name === newName )\n        const changedContact = { ...oldContact, number: newNumber}\n\n        contactsService\n          .update(changedContact.id, changedContact)\n          .then(newContact => {\n            setContacts(contacts.map(contact => contact.id !== changedContact.id ? contact : newContact))\n            setNotification(`Phone number for ${newName} updated`)\n            setNotificationClass('notification')\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n        })\n        .catch(error => {\n          setNotification(`${newName} not found`)\n          setNotificationClass('error')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n          setContacts(contacts.filter(x => x.id !== changedContact.id))\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n      return\n    }\n\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    contactsService\n      .create(contactObject)\n      .then(newContact => {\n        setContacts(contacts.concat(newContact))\n        setNotification(`Added ${newName}`)\n        setNotificationClass('notification')\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const removeContact = (contact) => {\n    if( window.confirm(`Delete ${contact.name}?`) ) {\n      contactsService\n      .remove(contact.id)\n      .then( () => {\n        setContacts(contacts.filter(n => n.id !== contact.id))\n        setNotification(`${contact.name} removed`)\n        setNotificationClass('notification')\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltering = (event) => {\n    setFilterBy(event.target.value)\n  }\n\n  let containsSubstring = (contact) => ( contact.name.toLowerCase().includes(filterBy.toLowerCase()) )\n  let contactsToShow = contacts.filter(containsSubstring)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} className={notificationClass} />\n      <Filter filterBy={filterBy} handleFiltering={handleFiltering} />\n\n      <h3>Add new contact</h3>\n      <ContactForm addContact={addContact}\n                   newName={newName}\n                   handleNameChange={handleNameChange}\n                   newNumber={newNumber}\n                   handleNumberChange={handleNumberChange} />\n\n      <h3>Contacts</h3>\n      <Contacts contacts={contactsToShow} removeContact={removeContact} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);"],"sourceRoot":""}